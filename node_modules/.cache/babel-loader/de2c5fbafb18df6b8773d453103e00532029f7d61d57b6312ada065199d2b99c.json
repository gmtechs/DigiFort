{"ast":null,"code":"var _jsxFileName = \"/home/shadowscript/Websites/AgriVerify/frontend/src/components/QRCodeDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport QRCode from 'qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeDisplay = ({\n  cropId\n}) => {\n  _s();\n  const qrValue = cropId ? `https://agriverify.vercel.app/verify/${cropId}` : '';\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (canvasRef.current && qrValue) {\n      QRCode.toCanvas(canvasRef.current, qrValue, {\n        width: 256\n      }, error => {\n        if (error) console.error('Error generating QR code:', error);\n      });\n    }\n  }, [qrValue]);\n  if (!cropId) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No crop ID available for QR code generation.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-code\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeDisplay, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = QRCodeDisplay;\nexport default QRCodeDisplay;\nvar _c;\n$RefreshReg$(_c, \"QRCodeDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","QRCode","jsxDEV","_jsxDEV","QRCodeDisplay","cropId","_s","qrValue","canvasRef","current","toCanvas","width","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","_c","$RefreshReg$"],"sources":["/home/shadowscript/Websites/AgriVerify/frontend/src/components/QRCodeDisplay.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport QRCode from 'qrcode';\n\nconst QRCodeDisplay = ({ cropId }) => {\n  const qrValue = cropId\n    ? `https://agriverify.vercel.app/verify/${cropId}`\n    : '';\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    if (canvasRef.current && qrValue) {\n      QRCode.toCanvas(canvasRef.current, qrValue, { width: 256 }, (error) => {\n        if (error) console.error('Error generating QR code:', error);\n      });\n    }\n  }, [qrValue]);\n\n  if (!cropId) return <div>No crop ID available for QR code generation.</div>;\n\n  return (\n    <div className=\"qr-code\">\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default QRCodeDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,OAAO,GAAGF,MAAM,GAClB,wCAAwCA,MAAM,EAAE,GAChD,EAAE;EACN,MAAMG,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIS,SAAS,CAACC,OAAO,IAAIF,OAAO,EAAE;MAChCN,MAAM,CAACS,QAAQ,CAACF,SAAS,CAACC,OAAO,EAAEF,OAAO,EAAE;QAAEI,KAAK,EAAE;MAAI,CAAC,EAAGC,KAAK,IAAK;QACrE,IAAIA,KAAK,EAAEC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,IAAI,CAACF,MAAM,EAAE,oBAAOF,OAAA;IAAAW,QAAA,EAAK;EAA4C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3E,oBACEf,OAAA;IAAKgB,SAAS,EAAC,SAAS;IAAAL,QAAA,eACtBX,OAAA;MAAQiB,GAAG,EAAEZ;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACZ,EAAA,CArBIF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}